//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#ifndef __test_h__
#define __test_h__

#include <Ice/PushDisableWarnings.h>
#include <Ice/Ice.h>

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION  != 30850
#       error Ice version mismatch: an exact match is required for beta generated code
#   endif
#endif

namespace HelloThere
{
    enum class Foo : ::std::uint8_t
    {
        Hi,
        There,
        I,
        Am,
        Austin
    };

    enum class Bar : ::std::uint8_t
    {
        Stuff,
        Without,
        LanguageStuff
    };

}

/// \cond STREAM
namespace Ice
{

template<>
struct StreamableTraits< ::HelloThere::Foo>
{
    static const StreamHelperCategory helper = StreamHelperCategoryEnum;
    static const int minValue = 0;
    static const int maxValue = 4;
    static const int minWireSize = 1;
    static const bool fixedLength = false;
};

template<>
struct StreamableTraits< ::HelloThere::Bar>
{
    static const StreamHelperCategory helper = StreamHelperCategoryEnum;
    static const int minValue = 0;
    static const int maxValue = 2;
    static const int minWireSize = 1;
    static const bool fixedLength = false;
};

}
/// \endcond

#include <Ice/PopDisableWarnings.h>
#endif
