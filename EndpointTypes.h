//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.8.0-alpha.0
//
// <auto-generated>
//
// Generated from file `EndpointTypes.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#ifndef __EndpointTypes_h__
#define __EndpointTypes_h__

#include <Ice/PushDisableWarnings.h>
#include <Ice/Config.h>
#include <cstdint>

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION  != 30850
#       error Ice version mismatch: an exact match is required for beta generated code
#   endif
#endif

namespace Ice
{
    /**
     * Uniquely identifies TCP endpoints.
     */
    constexpr ::std::int16_t TCPEndpointType = 1;

    /**
     * Uniquely identifies SSL endpoints.
     */
    constexpr ::std::int16_t SSLEndpointType = 2;

    /**
     * Uniquely identifies UDP endpoints.
     */
    constexpr ::std::int16_t UDPEndpointType = 3;

    /**
     * Uniquely identifies TCP-based WebSocket endpoints.
     */
    constexpr ::std::int16_t WSEndpointType = 4;

    /**
     * Uniquely identifies SSL-based WebSocket endpoints.
     */
    constexpr ::std::int16_t WSSEndpointType = 5;

    /**
     * Uniquely identifies Bluetooth endpoints.
     */
    constexpr ::std::int16_t BTEndpointType = 6;

    /**
     * Uniquely identifies SSL Bluetooth endpoints.
     */
    constexpr ::std::int16_t BTSEndpointType = 7;

    /**
     * Uniquely identifies iAP-based endpoints.
     */
    constexpr ::std::int16_t iAPEndpointType = 8;

    /**
     * Uniquely identifies SSL iAP-based endpoints.
     */
    constexpr ::std::int16_t iAPSEndpointType = 9;

}

#include <Ice/PopDisableWarnings.h>
#endif
